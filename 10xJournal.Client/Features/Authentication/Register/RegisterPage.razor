@page "/register"
@using Microsoft.AspNetCore.Components.Web
@using _10xJournal.Client.Features.Authentication.Register
@inject NavigationManager Navigation
@inject Supabase.Client SupabaseClient
@inject ILogger<RegisterPage> Logger

<PageTitle>Rejestracja - 10xJournal</PageTitle>

<ThemeToggle />

<main style="margin: 1rem;">
    <header>
        <h1>Załóż konto</h1>
        <p>
            Masz już konto?
            <a href="/login">Zaloguj się</a>
        </p>
    </header>

    <RegisterForm OnRegisterSuccess="HandleRegisterSuccess" />
</main>

@code {
    private async Task HandleRegisterSuccess()
    {
        // Check if user was auto-logged in (email confirmation disabled)
        // If session exists, redirect to app. Otherwise, show confirmation message.
        var session = SupabaseClient.Auth.CurrentSession;
        
        Logger.LogInformation("HandleRegisterSuccess called. Session exists: {HasSession}, User: {User}", 
            session != null, session?.User?.Email ?? "null");
        
        if (session?.User != null)
        {
            // User is authenticated - redirect to app
            Logger.LogInformation("Redirecting authenticated user to /app/journal");
            Navigation.NavigateTo("/app/journal", forceLoad: false);
        }
        else
        {
            // Email confirmation required - show success message
            Logger.LogInformation("No session found, redirecting to /registration-success");
            Navigation.NavigateTo("/registration-success", forceLoad: false);
        }
        
        await Task.CompletedTask;
    }
}
